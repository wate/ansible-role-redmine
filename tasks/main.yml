---
- name: Find pratform variable file
  ansible.builtin.set_fact:
    variable_file: "{{ lookup('first_found', params, errors='ignore') }}"
  vars:
    params:
      files:
        - "{{ ansible_facts.os_family }}/{{ ansible_facts.distribution }}/{{ ansible_facts.distribution_major_version }}.yml"
        - "{{ ansible_facts.os_family }}/{{ ansible_facts.distribution }}.yml"
        - "{{ ansible_facts.os_family }}.yml"
      paths:
        - vars
  tags: role_redmine_include_var
- name: Include variable file
  ansible.builtin.include_vars:
    file: "{{ variable_file }}"
  when: variable_file | length > 0
  tags: role_redmine_include_var
- name: Import dependency task
  ansible.builtin.import_tasks:
    file: dependency.yml
  tags: role_redmine_dependency
- name: Import database task
  ansible.builtin.import_tasks:
    file: database.yml
  tags: role_redmine_database
- name: Setup Redmine
  become: true
  become_user: "{{ redmine_user }}"
  environment:
    RAILS_ENV: "{{ redmine_mode }}"
    REDMINE_LANG: "{{ redmine_lang }}"
  block:
    - name: Checkout Redmine
      ansible.builtin.git:
        repo: "{{ redmine_repo }}"
        dest: "{{ redmine_root }}"
        version: "{{ redmine_version }}"
      register: checkout_result
    - name: Import setting task
      ansible.builtin.import_tasks:
        file: setting.yml
      tags: role_redmine_setting
    - name: Install/update gem packages
      ansible.builtin.command:
        cmd: bundle update
        chdir: "{{ redmine_root }}"
    - name: Create secret token
      ansible.builtin.command:
        cmd: bundle exec rake generate_secret_token
        chdir: "{{ redmine_root }}"
        creates: "{{ redmine_root }}/config/initializers/secret_token.rb"
      register: generate_secret_token_result
    - name: Import restore task
      ansible.builtin.import_tasks:
        file: restore.yml
      tags: role_redmine_restore
    - name: Migrate database
      ansible.builtin.command:
        cmd: bundle exec rake db:migrate
        chdir: "{{ redmine_root }}"
      notify: restart redmine
      when: |
        (checkout_result is defined and checkout_result is changed)
        or
        (db_config_result is defined and db_config_result is changed)
    - name: Load default data
      ansible.builtin.command:
        cmd: bundle exec rake redmine:load_default_data
        chdir: "{{ redmine_root }}"
      when:
        - generate_secret_token_result is changed
        - not redmine_skip_load_default_data
    - name: Import theme task
      ansible.builtin.import_tasks:
        file: theme.yml
      tags: role_redmine_theme
    - name: Import plugin task
      ansible.builtin.import_tasks:
        file: plugin.yml
      tags: role_redmine_plugin
    - name: Import Redmine setting import task
      ansible.builtin.import_tasks:
        file: import.yml
      when: |
        (generate_secret_token_result is defiled and generate_secret_token_result is changed)
        or
        redmine_reimport | default(false)
      tags: role_redmine_import
- name: Import cron job task
  ansible.builtin.import_tasks:
    file: cron.yml
  tags: role_redmine_cron
- name: Import service task
  ansible.builtin.import_tasks:
    file: service.yml
  tags: role_redmine_service
