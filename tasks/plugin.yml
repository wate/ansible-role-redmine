---
- name: install/update plugins
  become: true
  become_user: "{{ redmine_user }}"
  environment:
    RAILS_ENV: "{{ redmine_mode }}"
    REDMINE_LANG: "{{ redmine_lang }}"
  block:
    - name: Install plugin from git
      ansible.builtin.git:
        repo: "{{ plugin.value.repo }}"
        dest: "{{ redmine_plugin_dir }}/{{ plugin.key }}"
        version: "{{ plugin.value.version | default('master') }}"
      loop: "{{ redmine_plugins | dict2items | selectattr('value.repo', 'defined') }}"
      loop_control:
        loop_var: plugin
        label: "{{ plugin.key }}"
      notify: restart redmine
      register: plugin_install_from_git_result
    - name: Unarchive plugin archive file
      ansible.builtin.unarchive:
        src: "{{ plugin.value.file }}"
        dest: "{{ redmine_plugin_dir }}"
        mode: "0755"
      loop: "{{ redmine_plugins | dict2items | selectattr('value.file', 'defined') | list }}"
      loop_control:
        loop_var: plugin
        label: "{{ plugin.key }}"
      notify: restart redmine
      register: plugin_install_from_file_result
    - name: Install plugin required packages
      ansible.builtin.apt:
        name: "{{ package.1 }}"
        state: present
      loop: "{{ redmine_plugins | dict2items | subelements('value.required_packages', {'skip_missing': True}) }}"
      loop_control:
        loop_var: package
        label: "{{ package.0.key }}:{{ package.1 }}"
      notify: restart redmine
      become: true
      become_user: root
    - name: Set plugin cron job
      ansible.builtin.cron:
        name: Redmine plugin {{ plugin.key }} job
        job: "{{ plugin.value.cron_job.cmd }}"
        minute: "{{ plugin.value.cron_job.minute | default(omit) }}"
        hour: "{{ plugin.value.cron_job.hour | default(omit) }}"
        day: "{{ plugin.value.cron_job.day | default(omit) }}"
        month: "{{ plugin.value.cron_job.month | default(omit) }}"
      loop: "{{ redmine_plugins | dict2items | selectattr('value.cron_job', 'defined') | list }}"
      loop_control:
        loop_var: plugin
        label: "{{ plugin.key }}"
    - name: Setup plugin
      when: >
        plugin_install_from_git_result is changed
        or
        plugin_install_from_file_result is changed
      block:
        - name: Install/update gem packages
          community.general.bundler:
            state: latest
            executable: "{{ redmine_root }}/bin/bundle"
            chdir: "{{ redmine_root }}"
        - name: Execute bundle exec rake db:migrate
          ansible.builtin.command:
            cmd: bundle exec rake db:migrate
            chdir: "{{ redmine_root }}"
        - name: Execute bundle exec rake redmine:plugins:migrate
          ansible.builtin.command:
            cmd: bundle exec rake redmine:plugins:migrate
            chdir: "{{ redmine_root }}"
        - name: Execute plugin post install action
          ansible.builtin.command:
            cmd: "{{ item.post_install_action }}"
            chdir: "{{ redmine_root }}"
          loop: "{{ redmine_plugins | selectattr('post_install_action', 'defined') | list }}"
          loop_control:
            label: "{{ item.name }}"
